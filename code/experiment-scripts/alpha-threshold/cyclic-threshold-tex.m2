needs "alpha-threshold.m2"
prec = 0.01;
nSeeds = 1 -- non need to run this multiple times
filenamePart = "../../graph-examples/cyclic/cyclic-"
outfilename ="cyclic.out"

C0 = 5; C1 = 9;
N0 = 5; N1 = 9;
nSeeds := 5;
averagesTable = 
for C from C0 to C1 list {C} |
for nNodes from N0 to N1 list (
    NodeCount := nNodes;
    EdgeCount := 1;
    << "C = " << C << ", nNodes = " << nNodes << endl; 
    results := apply(nSeeds,seed->elapsedTime (
	    filename := filenamePart|toString C|"-(N="|nNodes|")-(m=1)-(seed="|seed|").graph";
    	    if fileExists filename
	    then searchAlpha(RootCount,NodeCount,EdgeCount,1,prec,
	   	filename,outfilename)
	    ));
    print results;
    r := select(results,r->r=!=null)/first;
    sum r / #r
    )

end --------------------
restart
load "cyclic-threshold-tex.m2";
roundedTable = applyTable(averagesTable, 
    a->if instance(a,ZZ) then a else round(3,a)) 
tab = transpose (matrix{{12345}|toList(N0..N1)}|| matrix roundedTable)   
s0 = tex transpose matrix tab
s1 = replace("\\$\\\\bgroup\\\\begin\\{pmatrix\\}", "\\begin{table}[h]
\\centering
\\begin{tabular}{l||c|c|c|c|c|c|}", s0)
s2 = replace("\\\\end\\{pmatrix\\}\\\\egroup\\$", "\\end{tabular}", s1);
s3 = replace("12345","$n\\setminus N$",s2);
s4 = replace("[^0-9]9\\\\\\\\", "9\\\\ \\hline",s3);

outputDirectory = currentDirectory()|"../../../experiments/"
file = openOut (outputDirectory | "cyclic-alpha-threshold.tex")
file << "% generated by\n%  code/experiment-scripts/alpha-threshold/cyclic-alpha-threshold-tex.m2\n"
file << s4
file << "\\caption{
An approximate threshold for the success rate $\\alpha$ for the cyclic-$n$ family.\\\\ 
$N$ = the number of nodes in the complete graph (with $m=1$).
}\\label{table:alpha-threshold-cyclic}
\\end{table}"
close file


