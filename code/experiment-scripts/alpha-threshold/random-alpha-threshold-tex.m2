needs "alpha-threshold.m2"
prec = 0.01;
nSeeds = 10
filename = "random.graph"
outfilename = filename|".out"

averagesTable = 
for logRootCount from 4 to 9 list {RootCount = 2^logRootCount} |
for nNodes from 4 to 9 list (
    NodeCount := nNodes;
    EdgeCount := 1;
    << "RootCount = " << RootCount << ", nNodes = " << nNodes << endl; 
    elapsedTime results := searchAlpha(RootCount,NodeCount,EdgeCount,nSeeds,prec,filename,outfilename);
    sum results / length results
    )

end --------------------
restart
load "random-alpha-threshold-tex.m2";
roundedTable = applyTable(averagesTable, 
    a->if instance(a,ZZ) then a else round(3,a)) 
tab = transpose (matrix{{12345,4,5,6,7,8,9}}|| matrix roundedTable)   
s0 = tex transpose matrix tab
s1 = replace("\\$\\\\bgroup\\\\begin\\{pmatrix\\}", "\\begin{table}[h]
\\centering
\\begin{tabular}{l||c|c|c|c|c|c|}", s0)
s2 = replace("\\\\end\\{pmatrix\\}\\\\egroup\\$", "\\end{tabular}", s1)
s3 = replace("12345","$d\\setminus N$",s2);
s4 = replace("[^0-9]9\\\\\\\\", "9\\\\ \\hline",s3);

outputDirectory = currentDirectory()|"../../../experiments/"
file = openOut (outputDirectory | "random-alpha-threshold.tex")
file << "% generated by\n%  code/experiment-scripts/alpha-threshold/random-alpha-threshold-tex.m2\n"
file << s4
file << "\\caption{
An approximate threshold for the success rate $\\alpha$.\\\\
$N$ = the number of nodes in the complete graph (with $m=1$), 
$d$ = the number of solutions.    
}\\label{table:alpha-threshold-simulated}
\\end{table}"
close file


